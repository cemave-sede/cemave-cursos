position = "bottomleft",
title = "Cursos por estado")
mapa_cursos_estados
install.packages("colorRamps")
library(colorRamps)
library(psych)
G16 <-  instrutores %>%
group_by(participantes) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
filter(count > 3) %>%
ggplot(aes(x = fct_reorder(participantes, count, .desc = F), y = count)) +
geom_col(color = "#e9ecef",  fill="#69b3a2") +
coord_flip() +
theme_minimal() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
) +
xlab(" ") +
ylab("Cursos ministrados") +
scale_y_continuous(limits=c(0, 10)) +
scale_y_continuous(breaks = seq(0, 10, by = 2), name = "Cursos ministrados ")
ggplotly(G16)
color <- colorRampPalette(c("darkgreen","lightgreen"))
View(color)
G17 <-  instrutores %>%
filter(!is.na(tipos.inst)) %>%
group_by(tipos.inst) %>%
summarise(count = n()) %>%
ggplot(aes(x = fct_reorder(tipos.inst, count, .desc = F), y = count)) +
geom_col(color = "#e9ecef",  fill= color) +
scale_x_discrete(name = " ") +
scale_y_continuous(name = "Número de instrutores") +
scale_x_discrete(name = " ", labels = c('Empresas', 'Forças de Segurança', 'Museus & Afins',  'Terceiro Setor',  'Ensino & Pesquisa', 'Órgãos Ambientais')) +
coord_flip() +
theme_minimal() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
)
ggplotly(G17)
G17 <-  instrutores %>%
filter(!is.na(tipos.inst)) %>%
group_by(tipos.inst) %>%
summarise(count = n())
library(flexdashboard)
mapa_estado <- geobr::read_state()
mapa_estado <- mapa_estado %>%
rename(UF = abbrev_state)
library(tidyverse)
library(data.table)
library(descr)
library(RColorBrewer)
library(hrbrthemes)
library(kableExtra)
library(janitor)
library(skimr)
library(knitr)
library(htmltools)
library(DT)
library(leaflet)
library(sf)
library(shiny)
library(plotly)
library(ggthemes)
library(forcats)
library(crosstalk)
library(summarywidget)
library(skimr)
library(mice)
library(colorRamps)
library(readr)
library(lubridate)
library(skimr)
library(psych)
library(ggplot2)
library(formattable)
library(geobr)
options(knitr.table.format = "html")
#Sys.setlocale('LC_CTYPE','C')
Sys.setlocale("LC_ALL","pt_BR.UTF-8")
crs <- leafletCRS(crsClass = "L.Proj.CRS", code = "ESRI:102003",
proj4def = "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs",
resolutions = 1.5^(25:15))
cursos_regiao <- data.frame(
regiao = c("Norte", "Nordeste", "Centro-Oeste", "Sudeste", "Sul"),
cursos = c(3, 21, 34, 13, 21))
mapa_regiao <- mapa_regiao %>% st_transform(4326)
crs <- leafletCRS(crsClass = "L.Proj.CRS", code = 4326,
proj4def = "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs",
resolutions = 1.5^(25:15))
cursos_regiao <- data.frame(
regiao = c("Norte", "Nordeste", "Centro-Oeste", "Sudeste", "Sul"),
cursos = c(3, 21, 34, 13, 21))
#mapa_regiao <- mapa_regiao %>% st_transform(4326)
dados_mapa_regiao = mapa_regiao %>%
left_join(cursos_regiao)
dados_mapa_regiao = mapa_regiao %>%
left_join(cursos_regiao)
mapa_regiao <- geobr::read_region()
mapa_regiao <- mapa_regiao %>%
rename(regiao = name_region)
mapa_regiao <- mapa_regiao %>%
mutate(regiao = recode(regiao, "Centro Oeste" = "Centro-Oeste"))
crs <- leafletCRS(crsClass = "L.Proj.CRS", code = 4326,
proj4def = "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs",
resolutions = 1.5^(25:15))
cursos_regiao <- data.frame(
regiao = c("Norte", "Nordeste", "Centro-Oeste", "Sudeste", "Sul"),
cursos = c(3, 21, 34, 13, 21))
#mapa_regiao <- mapa_regiao %>% st_transform(4326)
dados_mapa_regiao = mapa_regiao %>%
left_join(cursos_regiao)
bins <- c(0, 10, 20, 30, 40)
qpal2 = colorBin("Greens", dados_mapa_regiao$cursos, bins = bins)
labels <- sprintf("<strong>%s</strong>", dados_mapa_regiao$cursos) %>% lapply(htmltools::HTML)
mapa_cursos_regiao <- dados_mapa_regiao %>%
leaflet(options = leafletOptions(crs = crs)) %>%
addPolygons(stroke = TRUE,
opacity = 1.0,
fillOpacity = 1.0,
smoothFactor = 0.5,
color = "white",
fillColor = ~qpal2(dados_mapa_regiao$cursos),
weight = 1,
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "15px",
direction = "auto"),
highlight = highlightOptions(weight = 1,
color = "grey",
fillOpacity = 0.9,
bringToFront = T)) %>%
addLegend(values = ~dados_mapa_regiao$cursos,
pal = qpal2,
position = "bottomleft",
title = "Cursos por região")
mapa_cursos_regiao
crs <- leafletCRS(crsClass = "L.Proj.CRS", code = 4326,
proj4def = "+proj=longlat +datum=WGS84",
resolutions = 1.5^(25:15))
cursos_regiao <- data.frame(
regiao = c("Norte", "Nordeste", "Centro-Oeste", "Sudeste", "Sul"),
cursos = c(3, 21, 34, 13, 21))
#mapa_regiao <- mapa_regiao %>% st_transform(4326)
dados_mapa_regiao = mapa_regiao %>%
left_join(cursos_regiao)
bins <- c(0, 10, 20, 30, 40)
qpal2 = colorBin("Greens", dados_mapa_regiao$cursos, bins = bins)
labels <- sprintf("<strong>%s</strong>", dados_mapa_regiao$cursos) %>% lapply(htmltools::HTML)
mapa_cursos_regiao <- dados_mapa_regiao %>%
leaflet(options = leafletOptions(crs = crs)) %>%
addPolygons(stroke = TRUE,
opacity = 1.0,
fillOpacity = 1.0,
smoothFactor = 0.5,
color = "white",
fillColor = ~qpal2(dados_mapa_regiao$cursos),
weight = 1,
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "15px",
direction = "auto"),
highlight = highlightOptions(weight = 1,
color = "grey",
fillOpacity = 0.9,
bringToFront = T)) %>%
addLegend(values = ~dados_mapa_regiao$cursos,
pal = qpal2,
position = "bottomleft",
title = "Cursos por região")
mapa_cursos_regiao
library(flexdashboard)
regiao_sf <- st_read("shapes/estados_2010.shp", quiet = TRUE)
regioes_sf <- st_read("shapes/regioes_2010.shp", quiet = TRUE)
library(sf)
regioes_sf <- st_read("shapes/regioes_2010.shp", quiet = TRUE)
View(regioes_sf)
cursos_regiao <- data.frame(
regiao = c("Norte", "Nordeste", "Centro-Oeste", "Sudeste", "Sul"),
cursos = c(3, 21, 34, 13, 21))
View(cursos_regiao)
View(regioes_sf)
estados_sf <- rename(estados_sf, regiao = sigla)
regioes_sf <- rename(regioes_sf, regiao = sigla)
regioes_sf <- st_read("shapes/regioes_2010.shp", quiet = TRUE)
View(regioes_sf)
View(regioes_sf)
regioes_sf <- rename(regioes_sf, regiao = nome)
View(regioes_sf)
regioes_sf <- rename(regioes_sf, regiao = nome)
regioes_sf <- rename(regioes_sf, nome = regiao)
regioes_sf <- st_read("shapes/regioes_2010.shp", quiet = TRUE)
View(regioes_sf)
regioes_sf <- rename(regioes_sf, nome = regiao)
library(tidyverse)
library(data.table)
library(descr)
library(RColorBrewer)
library(hrbrthemes)
library(kableExtra)
library(janitor)
library(skimr)
library(knitr)
library(htmltools)
library(DT)
library(leaflet)
library(sf)
library(shiny)
library(plotly)
library(ggthemes)
library(forcats)
library(crosstalk)
library(summarywidget)
library(skimr)
library(mice)
library(colorRamps)
library(readr)
library(lubridate)
library(skimr)
library(psych)
library(ggplot2)
library(formattable)
library(geobr)
options(knitr.table.format = "html")
#Sys.setlocale('LC_CTYPE','C')
Sys.setlocale("LC_ALL","pt_BR.UTF-8")
regioes_sf <- rename(regioes_sf, nome = regiao)
regioes_sf <- rename(regioes_sf, regiao = nome)
View(regioes_sf)
dados_mapa_regiao = regioes_sf %>%
left_join(cursos_regiao)
estados_sf <- st_read("shapes/estados_2010.shp", quiet = TRUE)
View(estados_sf)
View(estados_sf)
estados_sf <- rename(estados_sf, UF = sigla)
View(estados_sf)
#mapa_estado <- mapa_estado %>% st_transform(4326)
dados_mapa_estados = estados_sf %>%
left_join(cursos_estado)
cursos_estado <- data.frame(
UF = c("AM", "BA", "CE", "DF", "ES", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RS", "SC", "SP", "RO", "RR", "AC", "TO", "SE", "AL", "GO", "AP"),
cursos = c(1, 2, 4, 22, 2, 2, 1, 9, 3, 2, 6, 4, 1, 4, 3, 2, 11, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0))
#mapa_estado <- mapa_estado %>% st_transform(4326)
dados_mapa_estados = estados_sf %>%
left_join(cursos_estado)
# Make a list of icons. We'll index into it based on name.
cursoIcons <- iconList(
curso = makeIcon("binocular_icon.png", "binocular_icon.png", 18, 18)
)
# Make a list of icons. We'll index into it based on name.
cursoIcons <- iconList(
curso = makeIcon("fig/binocular_icon.png", "binocular_icon.png", 18, 18)
)
# Make a list of icons. We'll index into it based on name.
cursoIcons <- iconList(
curso = makeIcon("fig/binocular_icon.png", "fig/binocular_icon.png", 18, 18)
)
View(cursoIcons)
# Make a list of icons. We'll index into it based on name.
cursoIcons <- iconList(
curso = makeIcon("fig/binocular_icon.png", "fig/binocular_icon.png", 18, 18)
)
# Make a list of icons. We'll index into it based on name.
cursoIcons <- iconList(
curso = makeIcon("fig/binocular_icon.png", "fig/binocular_icon@2x.png", 18, 18)
)
# Make a list of icons. We'll index into it based on name.
cursoicon = makeIcon("fig/binocular_icon.png", "fig/binocular_icon@2x.png", 18, 18)
View(cursoicon)
View(dados_mapa_estados)
labels <- sprintf("<strong>%s</strong>", dados_mapa_estados$cursos, dados_mapa_estados$UF) %>% lapply(htmltools::HTML)
View(labels)
legendas <- dados_mapa_estados %>% mutate(popup_info = paste (UF, "<br/>", curso, "<br/>")) # criando uma coluna na tabela de dados com os dados que serão mostrados na janela popup
View(dados_mapa_estados)
legendas <- dados_mapa_estados %>% mutate(popup_info = paste (UF, "<br/>", regiao_id, "<br/>")) # criando uma coluna na tabela de dados com os dados que serão mostrados na janela popup
View(legendas)
mapa_cursos_estados <- dados_mapa_estados %>%
leaflet() %>%
setView(lng = -58, lat = -14,
zoom = 4) %>%
addPolygons(stroke = TRUE,
opacity = 1.0,
fillOpacity = 1.0,
smoothFactor = 0.5,
color = "white",
fillColor = ~qpal(dados_mapa_estados$cursos),
weight = 1,
label = labels,
popup = ~popup_info,
labelOptions = labelOptions(
style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "15px",
direction = "auto"),
highlight = highlightOptions(weight = 1,
color = "grey",
fillOpacity = 0.9,
bringToFront = T)) %>%
addLegend(values = ~dados_mapa_estados$cursos,
pal = qpal,
position = "bottomleft",
title = "Cursos por estado")
cursos_estado <- data.frame(
UF = c("AM", "BA", "CE", "DF", "ES", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RS", "SC", "SP", "RO", "RR", "AC", "TO", "SE", "AL", "GO", "AP"),
cursos = c(1, 2, 4, 22, 2, 2, 1, 9, 3, 2, 6, 4, 1, 4, 3, 2, 11, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0))
#mapa_estado <- mapa_estado %>% st_transform(4326)
dados_mapa_estados = estados_sf %>%
left_join(cursos_estado)
bins <- c(0, 4, 8, 12, 14, 16, 20, 24)
qpal = colorBin("Greens", dados_mapa_estados$cursos, bins = bins)
legendas <- dados_mapa_estados %>% mutate(popup_info = paste (UF, "<br/>", regiao_id, "<br/>")) # criando uma coluna na tabela de dados com os dados que serão mostrados na janela popup
labels <- sprintf("<strong>%s</strong>", dados_mapa_estados$cursos, "<strong>%s</strong>", dados_mapa_estados$UF) %>% lapply(htmltools::HTML)
mapa_cursos_estados <- dados_mapa_estados %>%
leaflet() %>%
setView(lng = -58, lat = -14,
zoom = 4) %>%
addPolygons(stroke = TRUE,
opacity = 1.0,
fillOpacity = 1.0,
smoothFactor = 0.5,
color = "white",
fillColor = ~qpal(dados_mapa_estados$cursos),
weight = 1,
label = labels,
popup = ~popup_info,
labelOptions = labelOptions(
style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "15px",
direction = "auto"),
highlight = highlightOptions(weight = 1,
color = "grey",
fillOpacity = 0.9,
bringToFront = T)) %>%
addLegend(values = ~dados_mapa_estados$cursos,
pal = qpal,
position = "bottomleft",
title = "Cursos por estado")
View(legendas)
View(dados_mapa_estados)
View(dados_mapa_regiao)
View(dados_mapa_regiao)
install.packages("dygraphs")
install.packages("d3heatmap")
install.packages("metricsgraphics")
install.packages("d3heatmap")
data()
data()
knitr::include_graphics("fig/figura01_rebio_guaribas_2022.jpg")
knitr::include_graphics("fig/figura_01_rebio_guaribas_2022.jpg")
knitr::include_graphics("figs/figura01_rebio_guaribas_2022.jpg")
knitr::include_graphics("figs\figura01_rebio_guaribas_2022.jpg")
knitr::include_graphics("../figs/figura01_rebio_guaribas_2022.jpg")
knitr::include_graphics("../figs/figura01_rebio_guaribas_2022.JPG")
knitr::include_graphics("../figs/figura01_rebio_guaribas_2022.JPG")
knitr::include_graphics("../figs/figura01_rebio_guaribas_2022.jpg")
knitr::include_graphics("figs/figura01_rebio_guaribas_2022.jpg") "figs/binoculars_icon.png"
knitr::include_graphics("figs/figura01_rebio_guaribas_2022.jpg")
knitr::include_graphics("figs/figura01_rebio_guaribas_2022.jpg")
knitr::include_graphics("figs/figura01_rebio_guaribas_2022.JPG")
knitr::include_graphics("figs/figura01_rebio_guaribas_2022.JPG")
```{r imagens1}
knitr::include_graphics("figs/figura01_rebio_guaribas_2022.JPG")
h
knitr::include_graphics("figs/figura01_rebio_guaribas_2022.JPG")
knitr::include_graphics("figs/figura01_rebio_guaribas_2022.JPG")
knitr::include_graphics("../figs/figura01_rebio_guaribas_2022.JPG")
![guaribas]("../figs/figura01_rebio_guaribas_2022.JPG")
![guaribas]("figs/figura01_rebio_guaribas_2022.JPG")
#knitr::include_graphics("../figs/figura01_rebio_guaribas_2022.JPG")
![guaribas]("figs/figura01_rebio_guaribas_2022.JPG")
library(knitr)
knitr::include_graphics("../figs/figura01_rebio_guaribas_2022.JPG")
knitr::include_graphics(figs/figura01_rebio_guaribas_2022.JPG)
knitr::include_graphics('figs/figura01_rebio_guaribas_2022.JPG')
knitr::include_graphics('guaribas_2022.JPG')
knitr::include_graphics('guaribas_2022.JPG')
library(flexdashboard)
knitr::include_graphics('figs/figura01_guaribas_2022.JPG')
knitr::include_graphics('guaribas_2022.JPG')
knitr::include_graphics('../figura01_rebio_guaribas_2022.JPG')
knitr::include_graphics('../figs/figura01_rebio_guaribas_2022.JPG')
knitr::include_graphics('figs/figura01_rebio_guaribas_2022.JPG')
knitr::include_graphics('figs/logo-cemave.jpg')
knitr::include_graphics('figs/logo-cna.jpg')
knitr::include_graphics('figs/logo-cemave.jpg')
knitr::include_graphics('figs/logo-sna.jpg')
knitr::include_graphics('figs/logo-icmbio.png')
knitr::include_graphics('figs/logo-cemave.jpg')
knitr::include_graphics('figs/logo-cemave.jpg')
knitr::include_graphics('figs/logo-cemave.jpg')
knitr::include_graphics('figs/logo-sna.jpg')
knitr::include_graphics('figs/logo-icmbio.png')
knitr::include_graphics('figs/logo-icmbio.png')
knitr::include_graphics('figs/logo-icmbio.png')
G14 <-  alunos %>%
filter(!is.na(pais)) %>%
group_by(pais) %>%
filter(!pais == "Brasil") %>%
summarise(count = n())
G14 <-  alunos %>%
filter(!is.na(pais)) %>%
filter(!pais == "Brasil") %>%
group_by(pais) %>%
summarise(count = n())
G14 <-  alunos %>%
filter(!is.na(pais)) %>%
filter(pais != "Brasil") %>%
group_by(pais) %>%
summarise(count = n())
View(alunos)
#Sys.setlocale('LC_CTYPE','C')
Sys.setlocale("LC_ALL","pt_BR.UTF-8")
cursos <- read_csv2("data/cursos_cemave_2023.csv")
#Sys.setlocale('LC_CTYPE','C')
Sys.setlocale("LC_ALL","pt_BR.UTF-8")
cursos <- read_csv2("data/cursos_cemave_2023.csv")
participantes <- read_csv2("data/participantes_cemave_2023.csv")
library(flexdashboard)
library(tidyverse)
library(data.table)
library(descr)
library(RColorBrewer)
library(hrbrthemes)
library(kableExtra)
library(janitor)
library(skimr)
library(knitr)
library(htmltools)
library(DT)
library(leaflet)
library(sf)
library(shiny)
library(plotly)
library(ggthemes)
library(forcats)
library(crosstalk)
library(summarywidget)
library(skimr)
library(mice)
library(colorRamps)
library(readr)
library(lubridate)
library(skimr)
library(psych)
library(ggplot2)
library(formattable)
library(geobr)
options(knitr.table.format = "html")
#Sys.setlocale('LC_CTYPE','C')
Sys.setlocale("LC_ALL","pt_BR.UTF-8")
options(knitr.table.format = "html")
#Sys.setlocale('LC_CTYPE','C')
Sys.setlocale("LC_ALL","pt_BR.UTF-8")
cursos <- read_csv2("data/cursos_cemave_2023.csv")
alunos <- read_csv2("data/alunos_cemave_2023.csv")
alunos <- read_csv2("data/alunos_cemave_2023.csv")
instrutores <- read_csv2("data/instrutores_cemave_2023.csv")
cursos$ID <- as.character(cursos$ID)
alunos$ID <- as.character(alunos$ID)
instrutores$ID <- as.character(instrutores$ID)
cursos.alunos <- full_join(cursos, alunos, by = "ID")
cursos$ID <- as.character(cursos$ID)
cursos$modalidade <- as.factor(cursos$modalidade)
cursos$latitude <- as.numeric(cursos$latitude)
cursos$longitude <- as.numeric(cursos$longitude)
cursos$ano <- as.factor(cursos$ano)
cursos$participantes <- as.integer(cursos$participantes)
cursos$alunos <- as.integer(cursos$alunos)
cursos$instrutores <- as.integer(cursos$instrutores)
cursos$colaboradores <- as.integer(cursos$colaboradores)
cursos$lista.participantes <- as.factor(cursos$lista.participantes)
cursos$relatorio.descritivo <- as.factor(cursos$relatorio.descritivo)
cursos$fotos <- as.factor(cursos$fotos)
cursos$UF <- as.factor(cursos$UF)
G14 <-  alunos %>%
filter(!is.na(pais)) %>%
filter(pais != "Brasil") %>%
group_by(pais) %>%
summarise(count = n())
View(G14)
# ---------------------------  Alunos por país
# alunos.pais <- data.frame(
#   pais = c("Brasil", "Bolívia", "Argentina", "Peru"),
#   alunos = c(878, 8, 3, 1)
# )
coul3 <- brewer.pal(6, "Pastel2")
G14 <-  alunos %>%
filter(!is.na(pais)) %>%
filter(pais != "Brasil") %>%
group_by(pais) %>%
summarise(count = n()) %>%
ggplot(aes(x = fct_reorder(pais, count, .desc = T), y = count)) +
geom_col(color = "#e9ecef",  fill= coul3) +
scale_x_discrete(name = "") +
scale_y_continuous(name = " ") +
scale_y_log10(name = " ") +
theme_minimal() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
)
ggplotly(G14)
ggplotly(G14)
